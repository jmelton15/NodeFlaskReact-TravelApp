import axios from "axios";
import { GetFromLocalStorage } from "../helpers/helpers";
import {v4 as uuid} from "uuid";
import defaultImg from "../Images/default_trip.jpg";

const FLASK_BASE_URL = process.env.REACT_APP_FLASK_URL || "http://127.0.0.1:5000"


class FlaskApi {
    // token for access to api can be stored here
    static token;

    static getTokenFromLS(){
        this.token = GetFromLocalStorage("token");
    }

    static async loginUser(username,password) {
        
        let res = await axios.post(`${FLASK_BASE_URL}/login`,{
            username,
            password
        });
        return res.data;
    }

    static async registerUser(username,email,password) {
        let res = await axios.post(`${FLASK_BASE_URL}/register`,{
            username,
            email,
            password
        })
        return res.data; 
    }

    /**
     * Sends request to server to create and store a new trip for a user
     * @param {string} startLocation 
     * @param {string} endLocation 
     * @param {array of strings} waypoints  ["burgers","parks", etc...]
     * @param {string} region => represents which country to create trip in
     * @param {int} userId 
     * @returns {marker_data: array of objects} [{name,icon,place_id,address,web_url,position,photo},etc.]
     */
    static async createTrip(startLocation,endLocation,waypoints,region,userId) {
        this.getTokenFromLS();
        let tripData = await axios.post(`${FLASK_BASE_URL}/users/${userId}/trip`,{
            startLocation,
            endLocation,
            waypoints,
            region
        },{
            headers:{
                Authorization:this.token
            }
        })
        console.log(tripData)
        console.log(tripData.data.data)
        return tripData.data.data;
    }

    /**
     * 
     * @param {string} startLocation 
     * @param {string} endLocation 
     * @param {*} waypointData 
     * @param {*} userId 
     * @returns 
     */
    static async saveTrip(startLocation,endLocation,waypointData,userId) {
        let res = await axios.post(`${FLASK_BASE_URL}/users/${userId}/trip/save`,{
            startLocation,
            endLocation,
            waypointData,
            userId
        },{
            headers:{
                Authorization:this.token 
            }
        })
        console.log(res.data)
        return res.data.response;
    }

    /**
     * 
     * @param {int} userId 
     * @param {axios cancel token} cancelToken => token generated by axios to cancel get requests inside useEffects
     * @returns  {id,start_point,end_point,waypoint_names,waypoint_addresses,waypoint_coords,marker_data,photo,user_id}
     */
    static async getTrips(userId,cancelToken) {
        this.getTokenFromLS();
        let savedTrips = await axios.get(`${FLASK_BASE_URL}/users/${userId}/trips/saved`,{
            headers:{
                Authorization:this.token
            },
        })
        return savedTrips.data.saved_trips;
    }

    static async deleteTrip(userId,tripId) {
        this.getTokenFromLS();
        let deletedTrip = await axios.delete(`${FLASK_BASE_URL}/users/${userId}/trips/${tripId}`,{
            headers:{
                Authorization:this.token
            },
        });
        return deletedTrip.data.message;
    }
}

export {FlaskApi};